def f0() : int {int x0; int x1; if(x0<x0) {int x2; while((4- 8+7+-3*(3+x0))<(6- x2+-2)+3+-10- x0*(9)) {} } else {} x1 := f2(); return 3+(-3)- 10*-9- -9; } def f1() : int {int x3;  return -8- (2)+-3*(-1+-6); } def f2() : int {int x4; if((7- -9- x4+x4)+(x4*6- x4)<0&&[!0+x4<x4||x4<(x4+-2- -4)*10- (x4)&&x4- x4+(x4)*x4- 0- x4*(4- x4+4- x4)<=(x4- x4- x4+-10*3+x4- -1+2)]) {int x4; } else {int x5; while((x4)*0=(x4- 4+-7- x5*3)||x5=x4) {int x6; if(-6+(x4)- (-6)*x4+-4*(x6)- x5- 7<=x5) {int x7; } } } if(8*-3<=3*x4- 3+x4- x4*2&&!x4=x4- (3*-8+-2)||[1+(9)*4- 3<((10*-3))+(-9- x4*x4)||6- x4<=x4- (3)- (-8)+-7*(2+x4)- x4&&-5+(-10*1*-2+-1)<((8))*(-7+-2)+-9- x4||(((-5)))+((x4)- 2+x4)<=(10)]) {int x4; x4 := 4;} else {int x8; }  return 0; } def f3() : int {int x9; while(-5*5*-2+8- (x9*x9)<=(8- 8*x9)+8+(-1)) {}  return -9+-7; } def f4() : int {int x10;  return (-7)*-8; }  output 1- 10*(-9);